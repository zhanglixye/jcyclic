<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd  
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd"
 >
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.kaiwait.service" annotation-config="true" />
	<context:component-scan base-package="com.kaiwait.common.utils" annotation-config="true" />
	<context:component-scan base-package="com.kaiwait.webservice" annotation-config="true" />
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:spring/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/kaiwait/mappers/*Mapper.xml" />
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.kaiwait.mappers" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务代理 -->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Tx" propagation="REQUIRED" rollback-for="Throwable"
				isolation="READ_COMMITTED" />
			<tx:method name="*TxNew" propagation="REQUIRES_NEW" rollback-for="Throwable"
				isolation="READ_COMMITTED" />
 			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 日志拦截器 -->
	<bean id="serviceLogging" class="com.kaiwait.core.interceptor.ServiceLogging" /> 
	
	<!-- 切面 -->
	<aop:config>
		<!-- 事务切面 -->
		<aop:pointcut id="allManagerMethod"
			expression="execution(* com.kaiwait.service.mst.impl.*.*(..))" />
		<aop:advisor pointcut-ref="allManagerMethod" advice-ref="txadvice" />
		<!-- Log切面 -->
		 <aop:aspect id="logAspect" ref="serviceLogging">  
        	<aop:pointcut id="businessService"  expression="execution(* com.kaiwait.service..*.*(..) ) or execution(* com.kaiwait.mappers..*.*(..) )" />  
            <aop:before pointcut-ref="businessService" method="doBefore"/>  
            <aop:after pointcut-ref="businessService" method="doAfter"/>  
            <aop:around pointcut-ref="businessService" method="doAround"/>  
            <aop:after-throwing pointcut-ref="businessService" method="doThrowing" throwing="ex"/>  
        </aop:aspect>
	</aop:config> 
	
</beans>