<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kaiwait.mappers.jczh.ExportExcelMapper">
	<resultMap id="BaseResultMap" type="com.kaiwait.bean.jczh.entity.Role">
		<result column="roleID" property="roleID" jdbcType="INTEGER" />
		<result column="roleName" property="roleName" jdbcType="VARCHAR" />
		<result column="roleOrder" property="roleOrder" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="eReportResultMap" type="com.kaiwait.bean.jczh.entity.ExcelReport">
		<result column="isSellFlg" property="isSellFlg" jdbcType="INTEGER" />
		<result column="jobNo" property="jobNo" jdbcType="VARCHAR" />
	</resultMap>
	<select id="getNodesByRoles" resultMap="BaseResultMap">
	select
		usermst.MEMBER_ID as memberID,
		usermst.USER_NAME as userName,
		commonmst.ITMNAME as  departNamezc,
		commonmst.ITEMNAME_HK as  departNamezt,
		commonmst.ITEMNAME_EN as  departNameen,
		commonmst.ITEMNAME_JP as  departNamejp,
		levelCom.ITMNAME as  levelNamezc,
		levelCom.ITEMNAME_HK as  levelNamezt,
		levelCom.ITEMNAME_EN as  levelNameen,
		levelCom.ITEMNAME_JP as  levelNamejp,
		companymst.COMPANY_FULL_NAME as companyFullName,
		CONCAT_WS(",",GROUP_CONCAT(distinct rolemst.ROLE_NAME order by rolenodetrn.NODE_ID),GROUP_CONCAT(distinct rolecom.ITMNAME order by sysrolenodemst.NODE_ID)) as roleNameListStrzc,
		CONCAT_WS(",",GROUP_CONCAT(distinct rolemst.ROLE_NAME order by rolenodetrn.NODE_ID),GROUP_CONCAT(distinct rolecom.ITEMNAME_EN order by sysrolenodemst.NODE_ID)) as roleNameListStren,
		CONCAT_WS(",",GROUP_CONCAT(distinct rolemst.ROLE_NAME order by rolenodetrn.NODE_ID),GROUP_CONCAT(distinct rolecom.ITEMNAME_JP order by sysrolenodemst.NODE_ID)) as roleNameListStrjp,
		CONCAT_WS(",",GROUP_CONCAT(distinct rolemst.ROLE_NAME order by rolenodetrn.NODE_ID),GROUP_CONCAT(distinct rolecom.ITEMNAME_HK order by sysrolenodemst.NODE_ID)) as roleNameListStrzt,
		CONCAT_WS(",",GROUP_CONCAT(distinct rolenodetrn.NODE_ID order by rolenodetrn.NODE_ID),GROUP_CONCAT(distinct sysrolenodemst.NODE_ID order by sysrolenodemst.NODE_ID)) as nodeListStr	
	from usermst 
		left join userroletrn on usermst.USERCD = userroletrn.USERCD
		left join rolecommst on userroletrn.ROLE_ID = rolecommst.ROLE_COM_ID
		left join commonmst as rolecom on rolecom.ITEMCD=rolecommst.ROLE_COM_NAME and rolecom.MSTCD="0007" and rolecom.COMPANY_CD=#{companyID,jdbcType=VARCHAR} 
		left join rolemst on userroletrn.ROLE_ID = rolemst.ROLE_ID and rolemst.COMPANY_CD=#{companyID,jdbcType=VARCHAR}
		left join rolenodetrn on userroletrn.ROLE_ID = rolenodetrn.ROLE_ID and rolenodetrn.COMPANY_CD=#{companyID,jdbcType=VARCHAR}
		left join sysrolenodemst on userroletrn.ROLE_ID=sysrolenodemst.ROLE_ID
		left join commonmst on usermst.DEPART_CD = commonmst.ITEMCD and commonmst.MSTCD="0005" and commonmst.COMPANY_CD=#{companyID,jdbcType=VARCHAR} 
		left join commonmst as levelCom on usermst.LEVEL = levelCom.ITEMCD and levelCom.MSTCD="0004" and levelCom.COMPANY_CD=#{companyID,jdbcType=VARCHAR}
		left join companymst on companymst.COMPANY_CD=#{companyID,jdbcType=VARCHAR}
	where usermst.COMPANY_CD=#{companyID,jdbcType=VARCHAR} 
		<if test="nickname != null and nickname != ''">
			AND usermst.USER_NAME like CONCAT('%', #{nickname}, '%')
		</if>
		<if test="departCD != null and departCD != ''">
			and usermst.DEPART_CD = #{departCD,jdbcType=VARCHAR}
		</if>
		<if test="level != null and level != ''">
			and usermst.LEVEL = #{level,jdbcType=VARCHAR}
		</if>
		<if test="companyID != null and companyID != ''">
			and usermst.COMPANY_CD = #{companyID,jdbcType=VARCHAR}
		</if>
		<if test="delFlg != null and delFlg != ''">
			and usermst.DEL_FLG = #{delFlg,jdbcType=VARCHAR}
		</if>
		<if test="userCD != null and userCD != ''">
			and usermst.MEMBER_ID = #{userCD,jdbcType=VARCHAR}
		</if>
		<if test="roleID != null and roleID != ''">
			and userroletrn.ROLE_ID = #{roleID,jdbcType=VARCHAR}
		</if>
	group by userroletrn.USERCD
	</select>
	
	<select id="getNodes" resultMap="BaseResultMap">
		select
			nodemst.NODE_ID as nodeID,
			nodemst.NODE_NAME_JP as nodeNamejp,
			nodemst.NODE_NAME_EN as nodeNameen,
			nodemst.NODE_NAME_ZH as nodeNamezc,
			nodemst.NODE_NAME_HK as nodeNamezt,
			nodemst.ORDER_ID as nodeOrder,
			nodemst.NODE_COLOR as nodeColor
		from nodemst
		order by nodeID asc
	</select>
	<select id="getReportListByJobs" resultMap="eReportResultMap">
	select
		clmst.ACCOUNT_CD as cldivAccountID,
		clmst.CLDIVCD as cldivID,
		clmst.DIVNM as dClientName,
		jobtrn.JOB_CD as jobNo,
		jobtrn.`ADDDATE` as jobCreateDate,
		ifnull(sellordertrn.DLVDAY,jobtrn.PLAN_DALDAY)  as planDlvday,
		case when sellordertrn.JOB_CD is not null then "1" else "0" end as isSellFlg,
		jobtrn.JOB_NAME as jobName,
		salemst.SALE_NAME as saleTypName,
		reqClmst.DIVNM as rClientName,
		gClmst.DIVNM as gClientName
	from jobtrn
		left join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD and sellordertrn.DEL_FLG != 1
		left join clmst on jobtrn.CLDIV_CD = clmst.CLDIVCD and clmst.COMPANY_CD=jobtrn.COMPANY_CD
		left join clmst as reqClmst on jobtrn.PAYER_CD = reqClmst.CLDIVCD and reqClmst.COMPANY_CD=jobtrn.COMPANY_CD
		left join clmst as gClmst on jobtrn.G_COMPANY = gClmst.CLDIVCD and gClmst.COMPANY_CD=jobtrn.COMPANY_CD
		left join salemst on jobtrn.SALE_TYP = salemst.SALE_CD and salemst.COMPANY_CD = jobtrn.COMPANY_CD
	where jobtrn.COMPANY_CD=#{companyID}  
		and jobtrn.DEL_FLG != 1
		<if test="cldivID!=null and cldivID!=''">
	  	 and jobtrn.CLDIV_CD = #{cldivID}
	    </if>
	    <if test="startDate!=null and startDate!=''">
	  	 and date_format(ifnull(sellordertrn.DLVDAY,jobtrn.PLAN_DALDAY),"%Y%m") >=  date_format(#{startDate},"%Y%m")
	    </if>
	    <if test="endDate!=null and endDate!=''">
	    and date_format(ifnull(sellordertrn.DLVDAY,jobtrn.PLAN_DALDAY),"%Y%m") &lt;=  date_format(#{endDate},"%Y%m") 
	    </if>
	order by clmst.CLDIVCD desc,jobtrn.JOB_CD
	</select>
	<select id="getReportListByJobsLabel" resultMap="eReportResultMap">
		select
			clmst.ACCOUNT_CD as cldivAccountID,
			clmst.CLDIVCD,
			clmst.DIVNM as dClientName,
			jobtrn.JOB_CD as jobNo,
			joblabeltrn.LABEL_CD as labelID,
			labelmst.LABEL_TEXT as labelName,
			jobtrn.`ADDDATE` as jobCreateDate,
			ifnull(sellordertrn.DLVDAY,jobtrn.PLAN_DALDAY)  as planDlvday,
			case when sellordertrn.JOB_CD is not null then "1" else "0" end as isSellFlg,
			jobtrn.JOB_NAME as jobName,
			salemst.SALE_NAME as saleTypName,
			reqClmst.DIVNM as rClientName,
			gClmst.DIVNM as gClientName
	
		from jobtrn
			left join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD and sellordertrn.DEL_FLG != 1
			left join clmst on jobtrn.CLDIV_CD = clmst.CLDIVCD and clmst.COMPANY_CD=jobtrn.COMPANY_CD
			left join clmst as reqClmst on jobtrn.PAYER_CD = reqClmst.CLDIVCD and reqClmst.COMPANY_CD=jobtrn.COMPANY_CD
			left join clmst as gClmst on jobtrn.G_COMPANY = gClmst.CLDIVCD and gClmst.COMPANY_CD=jobtrn.COMPANY_CD
			left join salemst on jobtrn.SALE_TYP = salemst.SALE_CD and salemst.COMPANY_CD = jobtrn.COMPANY_CD
			left join joblabeltrn on jobtrn.JOB_CD = joblabeltrn.JOB_CD and joblabeltrn.COMPANY_CD = jobtrn.COMPANY_CD
			join labelmst on labelmst.LABEL_ID = joblabeltrn.LABEL_CD and labelmst.LABEL_TYPE=0 and labelmst.LABEL_LEVEL=1 and labelmst.COMPANY_CD=jobtrn.COMPANY_CD
		where jobtrn.COMPANY_CD=#{companyID}   
			  and jobtrn.DEL_FLG != 1
			  <if test="cldivID!=null and cldivID!=''">
			  	and jobtrn.CLDIV_CD = #{cldivID}
			  </if>
			  <if test="startDate!=null and startDate!=''">
			  	and date_format(ifnull(sellordertrn.DLVDAY,jobtrn.PLAN_DALDAY),"%Y%m") >=  date_format(#{startDate},"%Y%m")
			  </if>
			  <if test="endDate!=null and endDate!=''">
			  	and date_format(ifnull(sellordertrn.DLVDAY,jobtrn.PLAN_DALDAY),"%Y%m") &lt;=  date_format(#{endDate},"%Y%m") 
			  </if>
		order by joblabeltrn.LABEL_CD asc,jobtrn.JOB_CD asc
	</select>
	
	
	<select id="getCompanyName" resultType="String">
	select
		companymst.COMPANY_FULL_NAME as companyFullName
	from companymst
	where companymst.COMPANY_CD=#{companyID}
	</select>
	<select id="getReportListByMadeCost" resultMap="eReportResultMap">
		
	</select>
	<select id="getReportListByPayable" resultMap="eReportResultMap">
		select 
			*
		from(
			select
				0 as orderIndex,
				clmst.DIVNM as pClientName,
				clmst.ACCOUNT_CD as cldivAccountID,
				clmst.CLDIVCD as pClientID,
				date_format(paytrn.CONFIRMDATE,"%Y-%m-%d") as confirmDate,
				costtrn.JOB_CD as jobNo,
				costtrn.COST_NO as costNo,
				paytrn.INPUT_NO as inputNo,
				paytrn.PAY_AMT as payAmt
			from costtrn
				left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and costtrn.COMPANY_CD=paytrn.COMPANY_CD
				left join clmst on costtrn.PAYEE_CD = clmst.CLDIVCD and costtrn.COMPANY_CD=clmst.COMPANY_CD
			where
				costtrn.COMPANY_CD=#{companyID}
				and paytrn.CONFIRMDATE between #{startDate} and  #{endDate}
				and paytrn.CONFIRMDATE is not null
			union all
			select
				1 as orderIndex,
				clmst.DIVNM as pClientName,
				clmst.ACCOUNT_CD as cldivAccountID,
				clmst.CLDIVCD as pClientID,
				date_format(paytrn.CONFIRMDATE,"%Y-%m-%d") as confirmDate,
				costtrn.JOB_CD as jobNo,
				costtrn.COST_NO as costNo,
				paytrn.INPUT_NO as inputNo,
				sum(paytrn.PAY_AMT) as payAmt
			from costtrn
				left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and costtrn.COMPANY_CD=paytrn.COMPANY_CD
				left join clmst on costtrn.PAYEE_CD = clmst.CLDIVCD and costtrn.COMPANY_CD=clmst.COMPANY_CD
			where
				costtrn.COMPANY_CD=#{companyID}
				and paytrn.CONFIRMDATE between #{startDate} and  #{endDate}
				and paytrn.CONFIRMDATE is not null
			group by clmst.CLDIVCD
		) as payabel
		order by payabel.cldivAccountID,payabel.orderIndex,payabel.jobNo,payabel.costNo,payabel.inputNo
	</select>
	<select id="getReportListByPayableButton" resultMap="eReportResultMap">
		select
			clmst.DIVNM as pClientName,
			clmst.ACCOUNT_CD as cldivAccountID,
			clmst.CLDIVCD as pClientID,
			date_format(paytrn.CONFIRMDATE,"%Y-%m-%d") as confirmDate,
			costtrn.JOB_CD as jobNo,
			costtrn.COST_NO as costNo,
			paytrn.INPUT_NO as inputNo,
			sum(paytrn.PAY_AMT) as PayAmt
		from costtrn
			left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and costtrn.COMPANY_CD=paytrn.COMPANY_CD
			left join clmst on costtrn.PAYEE_CD = clmst.CLDIVCD and costtrn.COMPANY_CD=clmst.COMPANY_CD
		where
			costtrn.COMPANY_CD=#{companyID}
			and paytrn.CONFIRMDATE is not null
			and paytrn.CONFIRMDATE between #{startDate} and  #{endDate}
		group by clmst.CLDIVCD
		order by clmst.ACCOUNT_CD,DATE_FORMAT(paytrn.CONFIRMDATE,"%Y%m"),costtrn.JOB_CD,paytrn.INPUT_NO
	</select>
	<select id="getReportListByPayableTotal" resultMap="eReportResultMap">
		select
			clmst.DIVNM as pClientName,
			clmst.ACCOUNT_CD as cldivAccountID,
			clmst.CLDIVCD as pClientID,
			date_format(paytrn.CONFIRMDATE,"%Y-%m-%d") as confirmDate,
			costtrn.JOB_CD as jobNo,
			costtrn.COST_NO as costNo,
			paytrn.INPUT_NO as inputNo,
			sum(paytrn.PAY_AMT) as PayAmt
		from costtrn
			left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and costtrn.COMPANY_CD=paytrn.COMPANY_CD
			left join clmst on costtrn.PAYEE_CD = clmst.CLDIVCD and costtrn.COMPANY_CD=clmst.COMPANY_CD
		where
			costtrn.COMPANY_CD=#{companyID}
			and paytrn.CONFIRMDATE is not null
			and paytrn.CONFIRMDATE between #{startDate} and  #{endDate}
	</select>
	
	<select id="getReportListByHopleCost" resultMap="eReportResultMap">
		select * from (
			select
			0 as orderIndex,
			payee.CLDIVCD as payeeID,
			payee.DIVNM as payeeName,
			payee.ACCOUNT_CD as cldivAccountID,
			costtrn.`ADDDATE` as orderAddDate,
			costtrn.COST_NO as costNo,
			clmst.DIVNM as cName,
			jobtrn.JOB_CD as jobNo,
			0 as lastMonthResidual,
			ifnull(orderhistorytrn.COST_AMT,0) as thisMonthHappened,
			0 as thisMonthAccurate,
			0 as isThisMonthAccurate,
			ifnull(orderhistorytrn.COST_AMT,0) as isThisMonthHappened
			from jobtrn
			join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD
			left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
			left join costtrn on jobtrn.JOB_CD=costtrn.JOB_CD and jobtrn.COMPANY_CD=costtrn.COMPANY_CD and costtrn.DEL_FLG != 1
			left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and costtrn.COMPANY_CD=paytrn.COMPANY_CD and paytrn.DEL_FLG != 1
			left join clmst as payee on costtrn.PAYEE_CD=payee.CLDIVCD and jobtrn.COMPANY_CD=payee.COMPANY_CD
			left join orderhistorytrn on costtrn.COST_NO=orderhistorytrn.ORDER_NO and orderhistorytrn.COMPANY_CD=costtrn.COMPANY_CD and orderhistorytrn.CHECK_MONTH=date_format(#{choseDate},"%Y%m")
			where
			date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m")
			and costtrn.`ADDDATE` BETWEEN #{startDate} and  #{endDate}
			and ( paytrn.CONFIRMDATE is null  OR paytrn.CONFIRMDATE  BETWEEN  #{endDate} AND '2099-01-01 01:01:01')
			and jobtrn.COMPANY_CD=#{companyID}
			and  jobtrn.DEL_FLG != 1 
			
			union all
			
			select
			0 as orderIndex,
			payee.CLDIVCD as payeeID,
			payee.DIVNM as payeeName,
			payee.ACCOUNT_CD as cldivAccountID,
			costtrn.`ADDDATE` as orderAddDate,
			costtrn.COST_NO as costNo,
			clmst.DIVNM as cName,
			jobtrn.JOB_CD as jobNo,
			case when paytrn.COMPANY_CD is not null and paytrn.CONFIRMDATE &lt; #{startDate} then 0 else ifnull(beforMonth.COST_AMT,0) end as lastMonthResidual,
			case when paytrn.CONFIRMDATE is null or paytrn.CONFIRMDATE > #{endDate} then ifnull(outMonth.COST_AMT,0) - ifnull(beforMonth.COST_AMT,0) else 0 end as thisMonthHappened,
			case when paytrn.CONFIRMDATE is not null and paytrn.CONFIRMDATE BETWEEN #{startDate} and  #{endDate}  then outMonth.COST_AMT else 0 end as thisMonthAccurate,
			case when paytrn.CONFIRMDATE is not null and paytrn.CONFIRMDATE BETWEEN #{startDate} and  #{endDate}  then beforMonth.COST_AMT-outMonth.COST_AMT else 0 end as isThisMonthAccurate,
			case when paytrn.CONFIRMDATE is null or paytrn.CONFIRMDATE > #{endDate} then ifnull(beforMonth.COST_AMT,0) + (ifnull(outMonth.COST_AMT,0) - ifnull(beforMonth.COST_AMT,0)) else 0 end as isThisMonthHappened
			from jobtrn
			join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD
			left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
			left join costtrn on jobtrn.JOB_CD=costtrn.JOB_CD and jobtrn.COMPANY_CD=costtrn.COMPANY_CD and costtrn.DEL_FLG != 1
			left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and costtrn.COMPANY_CD=paytrn.COMPANY_CD and paytrn.DEL_FLG != 1
			left join clmst as payee on costtrn.PAYEE_CD=payee.CLDIVCD and costtrn.COMPANY_CD=payee.COMPANY_CD
			left join orderhistorytrn as outMonth on costtrn.COST_NO=outMonth.ORDER_NO and outMonth.COMPANY_CD=costtrn.COMPANY_CD and outMonth.CHECK_MONTH=date_format(#{choseDate},"%Y%m")
			left join orderhistorytrn as beforMonth on costtrn.COST_NO=beforMonth.ORDER_NO and beforMonth.COMPANY_CD=costtrn.COMPANY_CD and beforMonth.CHECK_MONTH=#{beforMonth}
			where
			date_format(sellordertrn.DLVDAY,"%Y%m") &lt; date_format(#{choseDate},"%Y%m")
			and costtrn.`ADDDATE` BETWEEN '2000-01-01 11:14:47' AND #{startDate}
			and jobtrn.COMPANY_CD=#{companyID}
			and  jobtrn.DEL_FLG != 1 
			
			union all
			
			select 
			1 as orderIndex,
			orderList.payeeID,
			orderList.payeeName,
			orderList.cldivAccountID,
			orderList.orderAddDate,
			orderList.costNo,
			orderList.cName,
			orderList.jobNo,
			sum(lastMonthResidual) as lastMonthResidual,
			sum(thisMonthHappened) as thisMonthHappened,
			sum(thisMonthAccurate) as thisMonthAccurate,
			sum(isThisMonthAccurate) as isThisMonthAccurate,
			sum(isThisMonthHappened) as isThisMonthHappened
			
			from (
			select
			payee.CLDIVCD as payeeID,
			payee.DIVNM as payeeName,
			payee.ACCOUNT_CD as cldivAccountID,
			costtrn.`ADDDATE` as orderAddDate,
			costtrn.COST_NO as costNo,
			clmst.DIVNM as cName,
			jobtrn.JOB_CD as jobNo,
			0 as lastMonthResidual,
			ifnull(orderhistorytrn.COST_AMT,0) as thisMonthHappened,
			0 as thisMonthAccurate,
			0 as isThisMonthAccurate,
			ifnull(orderhistorytrn.COST_AMT,0) as isThisMonthHappened
			from jobtrn
			join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD
			left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
			left join costtrn on jobtrn.JOB_CD=costtrn.JOB_CD and jobtrn.COMPANY_CD=costtrn.COMPANY_CD and costtrn.DEL_FLG != 1
			left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and costtrn.COMPANY_CD=paytrn.COMPANY_CD and paytrn.DEL_FLG != 1
			left join clmst as payee on costtrn.PAYEE_CD=payee.CLDIVCD and jobtrn.COMPANY_CD=payee.COMPANY_CD
			left join orderhistorytrn on costtrn.COST_NO=orderhistorytrn.ORDER_NO and orderhistorytrn.COMPANY_CD=costtrn.COMPANY_CD and orderhistorytrn.CHECK_MONTH=date_format(#{choseDate},"%Y%m")
			where
			date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m")
			and costtrn.`ADDDATE` BETWEEN #{startDate} and  #{endDate} 
			and ( paytrn.CONFIRMDATE is null  OR paytrn.CONFIRMDATE  BETWEEN  #{endDate}  AND '2099-01-01 01:01:01')
			and jobtrn.COMPANY_CD=#{companyID}
			and  jobtrn.DEL_FLG != 1 
			
			union all
			
			select
			payee.CLDIVCD as payeeID,
			payee.DIVNM as payeeName,
			payee.ACCOUNT_CD as cldivAccountID,
			costtrn.`ADDDATE` as orderAddDate,
			costtrn.COST_NO as costNo,
			clmst.DIVNM as cName,
			jobtrn.JOB_CD as jobNo,
			case when paytrn.COMPANY_CD is not null and paytrn.CONFIRMDATE &lt; #{startDate} then 0 else ifnull(beforMonth.COST_AMT,0) end as lastMonthResidual,
			case when paytrn.CONFIRMDATE is null or paytrn.CONFIRMDATE > #{endDate}  then ifnull(outMonth.COST_AMT,0) - ifnull(beforMonth.COST_AMT,0) else 0 end as thisMonthHappened,
			case when paytrn.CONFIRMDATE is not null and paytrn.CONFIRMDATE BETWEEN #{startDate} and  #{endDate}   then outMonth.COST_AMT else 0 end as thisMonthAccurate,
			case when paytrn.CONFIRMDATE is not null and paytrn.CONFIRMDATE BETWEEN #{startDate} and  #{endDate}  then beforMonth.COST_AMT-outMonth.COST_AMT else 0 end as isThisMonthAccurate,
			case when paytrn.CONFIRMDATE is null or paytrn.CONFIRMDATE >  #{endDate}  then ifnull(beforMonth.COST_AMT,0) + (ifnull(outMonth.COST_AMT,0) - ifnull(beforMonth.COST_AMT,0)) else 0 end as isThisMonthHappened
			from jobtrn
			join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD
			left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
			left join costtrn on jobtrn.JOB_CD=costtrn.JOB_CD and jobtrn.COMPANY_CD=costtrn.COMPANY_CD and costtrn.DEL_FLG != 1
			left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and costtrn.COMPANY_CD=paytrn.COMPANY_CD and paytrn.DEL_FLG != 1
			left join clmst as payee on costtrn.PAYEE_CD=payee.CLDIVCD and costtrn.COMPANY_CD=payee.COMPANY_CD
			left join orderhistorytrn as outMonth on costtrn.COST_NO=outMonth.ORDER_NO and outMonth.COMPANY_CD=costtrn.COMPANY_CD and outMonth.CHECK_MONTH=date_format(#{choseDate},"%Y%m")
			left join orderhistorytrn as beforMonth on costtrn.COST_NO=beforMonth.ORDER_NO and beforMonth.COMPANY_CD=costtrn.COMPANY_CD and beforMonth.CHECK_MONTH=#{beforMonth}
			where
			date_format(sellordertrn.DLVDAY,"%Y%m") &lt; date_format(#{choseDate},"%Y%m")
			and costtrn.`ADDDATE` BETWEEN '2000-01-01 11:14:47' AND #{startDate} 
			and jobtrn.COMPANY_CD=#{companyID}
			and  jobtrn.DEL_FLG != 1 
			) as orderList
			group by orderList.payeeID
			union all
			select
			2 as orderIndex,
			"" as payeeID,
			"" as payeeName,
			"" as cldivAccountID,
			"" as orderAddDate,
			lendtrn.INPUT_NO as costNo,
			clmst.DIVNM as cName,
			jobtrn.JOB_CD as jobNo,
			0 as lastMonthResidual,
			ifnull(orderhistorytrn.COST_AMT,0) as thisMonthHappened,
			0 as thisMonthAccurate,
			0 as isThisMonthAccurate,
			ifnull(orderhistorytrn.COST_AMT,0) as isThisMonthHappened
			from jobtrn
			join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD
			left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
			left join lendtrn on jobtrn.JOB_CD=lendtrn.JOB_CD and jobtrn.COMPANY_CD=lendtrn.COMPANY_CD and lendtrn.DEL_FLG != 1
			left join orderhistorytrn on lendtrn.INPUT_NO=orderhistorytrn.ORDER_NO and orderhistorytrn.COMPANY_CD=lendtrn.COMPANY_CD and orderhistorytrn.CHECK_MONTH=date_format(#{choseDate},"%Y%m")
			where
			date_format(sellordertrn.DLVDAY,"%Y%m") =date_format(#{choseDate},"%Y%m")
			and lendtrn.`ADDDATE` BETWEEN #{startDate} and  #{endDate} 
			and ( lendtrn.CONFIRMDATE is null  OR lendtrn.CONFIRMDATE  BETWEEN  #{endDate}  AND '2099-01-01 01:01:01')
			and jobtrn.COMPANY_CD=#{companyID}
			and  jobtrn.DEL_FLG != 1 
			
			union all
			
			select
			2 as orderIndex,
			"" as payeeID,
			"" as payeeName,
			"" as cldivAccountID,
			"" as orderAddDate,
			lendtrn.INPUT_NO as costNo,
			clmst.DIVNM as cName,
			jobtrn.JOB_CD as jobNo,
			case when lendtrn.COMPANY_CD is not null and lendtrn.CONFIRMDATE &lt; #{startDate} then 0 else ifnull(beforMonth.COST_AMT,0) end as lastMonthResidual,
			case when lendtrn.CONFIRMDATE is null or lendtrn.CONFIRMDATE > #{endDate}  then ifnull(outMonth.COST_AMT,0) - ifnull(beforMonth.COST_AMT,0) else 0 end as thisMonthHappened,
			case when lendtrn.CONFIRMDATE is not null and lendtrn.CONFIRMDATE BETWEEN #{startDate} and  #{endDate}  then outMonth.COST_AMT else 0 end as thisMonthAccurate,
			case when lendtrn.CONFIRMDATE is not null and lendtrn.CONFIRMDATE BETWEEN #{startDate} and  #{endDate}  then beforMonth.COST_AMT-outMonth.COST_AMT else 0 end as isThisMonthAccurate,
			case when lendtrn.CONFIRMDATE is null or lendtrn.CONFIRMDATE > #{endDate} then ifnull(beforMonth.COST_AMT,0) + (ifnull(outMonth.COST_AMT,0) - ifnull(beforMonth.COST_AMT,0)) else 0 end as isThisMonthHappened
			from jobtrn
			join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD
			left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
			left join lendtrn on jobtrn.JOB_CD=lendtrn.JOB_CD and jobtrn.COMPANY_CD=lendtrn.COMPANY_CD and lendtrn.DEL_FLG != 1
			left join orderhistorytrn as outMonth on lendtrn.INPUT_NO=outMonth.ORDER_NO and outMonth.COMPANY_CD=lendtrn.COMPANY_CD and outMonth.CHECK_MONTH=date_format(#{choseDate},"%Y%m")
			left join orderhistorytrn as beforMonth on lendtrn.INPUT_NO=beforMonth.ORDER_NO and beforMonth.COMPANY_CD=lendtrn.COMPANY_CD and beforMonth.CHECK_MONTH=#{beforMonth}
			where
			date_format(sellordertrn.DLVDAY,"%Y%m") &lt; date_format(#{choseDate},"%Y%m")
			and lendtrn.`ADDDATE` BETWEEN '2000-01-01 11:14:47' AND  #{startDate} 
			and jobtrn.COMPANY_CD=#{companyID}
			and  jobtrn.DEL_FLG != 1 
			
			union all
			
			select 
			3 as orderIndex,
			lendList.payeeID,
			lendList.payeeName,
			"" as cldivAccountID,
			lendList.orderAddDate,
			lendList.costNo,
			lendList.cName,
			lendList.jobNo,
			sum(lastMonthResidual) as lastMonthResidual,
			sum(thisMonthHappened) as thisMonthHappened,
			sum(thisMonthAccurate) as thisMonthAccurate,
			sum(isThisMonthAccurate) as isThisMonthAccurate,
			sum(isThisMonthHappened) as isThisMonthHappened
			
			from (
			select
			"" as payeeID,
			"" as payeeName,
			"" as cldivAccountID,
			"" as orderAddDate,
			lendtrn.INPUT_NO as costNo,
			clmst.DIVNM as cName,
			jobtrn.JOB_CD as jobNo,
			0 as lastMonthResidual,
			ifnull(orderhistorytrn.COST_AMT,0) as thisMonthHappened,
			0 as thisMonthAccurate,
			0 as isThisMonthAccurate,
			ifnull(orderhistorytrn.COST_AMT,0) as isThisMonthHappened
			from jobtrn
			join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD
			left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
			left join lendtrn on jobtrn.JOB_CD=lendtrn.JOB_CD and jobtrn.COMPANY_CD=lendtrn.COMPANY_CD and lendtrn.DEL_FLG != 1
			left join orderhistorytrn on lendtrn.INPUT_NO=orderhistorytrn.ORDER_NO and orderhistorytrn.COMPANY_CD=lendtrn.COMPANY_CD and orderhistorytrn.CHECK_MONTH=date_format(#{choseDate},"%Y%m")
			where
			date_format(sellordertrn.DLVDAY,"%Y%m") =date_format(#{choseDate},"%Y%m")
			and lendtrn.`ADDDATE` BETWEEN #{startDate} and  #{endDate} 
			and ( lendtrn.CONFIRMDATE is null  OR lendtrn.CONFIRMDATE  BETWEEN #{endDate}  AND '2099-01-01 01:01:01')
			and jobtrn.COMPANY_CD=#{companyID}
			and  jobtrn.DEL_FLG != 1 
			
			union all
			
			select
			"" as payeeID,
			"" as payeeName,
			"" as cldivAccountID,
			"" as orderAddDate,
			lendtrn.INPUT_NO as costNo,
			clmst.DIVNM as cName,
			jobtrn.JOB_CD as jobNo,
			case when lendtrn.COMPANY_CD is not null and lendtrn.CONFIRMDATE &lt; #{startDate} then 0 else ifnull(beforMonth.COST_AMT,0) end as lastMonthResidual,
			case when lendtrn.CONFIRMDATE is null or lendtrn.CONFIRMDATE > #{endDate}  then ifnull(outMonth.COST_AMT,0) - ifnull(beforMonth.COST_AMT,0) else 0 end as thisMonthHappened,
			case when lendtrn.CONFIRMDATE is not null and lendtrn.CONFIRMDATE BETWEEN #{startDate} and  #{endDate}   then outMonth.COST_AMT else 0 end as thisMonthAccurate,
			case when lendtrn.CONFIRMDATE is not null and lendtrn.CONFIRMDATE BETWEEN #{startDate} and  #{endDate}  then beforMonth.COST_AMT-outMonth.COST_AMT else 0 end as isThisMonthAccurate,
			case when lendtrn.CONFIRMDATE is null or lendtrn.CONFIRMDATE > #{endDate} then ifnull(beforMonth.COST_AMT,0) + (ifnull(outMonth.COST_AMT,0) - ifnull(beforMonth.COST_AMT,0)) else 0 end as isThisMonthHappened
			from jobtrn
			join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and jobtrn.COMPANY_CD=sellordertrn.COMPANY_CD
			left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
			left join lendtrn on jobtrn.JOB_CD=lendtrn.JOB_CD and jobtrn.COMPANY_CD=lendtrn.COMPANY_CD and lendtrn.DEL_FLG != 1
			left join orderhistorytrn as outMonth on lendtrn.INPUT_NO=outMonth.ORDER_NO and outMonth.COMPANY_CD=lendtrn.COMPANY_CD and outMonth.CHECK_MONTH=date_format(#{choseDate},"%Y%m")
			left join orderhistorytrn as beforMonth on lendtrn.INPUT_NO=beforMonth.ORDER_NO and beforMonth.COMPANY_CD=lendtrn.COMPANY_CD and beforMonth.CHECK_MONTH=#{beforMonth}
			where
			date_format(sellordertrn.DLVDAY,"%Y%m") &lt; date_format(#{choseDate},"%Y%m")
			and lendtrn.`ADDDATE` BETWEEN '2000-01-01 11:14:47' AND  #{startDate}
			and jobtrn.COMPANY_CD=#{companyID}
			and  jobtrn.DEL_FLG != 1 
			) as lendList
			group by lendList.payeeID
			) as hopleCostList
			order by hopleCostList.payeeID desc,hopleCostList.orderIndex
	</select>
	<select id="getRportJobList" resultMap="eReportResultMap">
	select 
		jobList.cldivID,
		jobList.cldivAccountID,
		jobList.dClientName,
		jobList.jobNo,
		jobList.jobName,
		jobList.sellupdate,
		jobList.saleTypName,
		jobList.isInvoicePublish,
		jobList.isReqPublish,
		ifnull(jobList.saleAmt,0) as saleAmt,
		ifnull(jobList.saleVat,0) as saleVat,
		jobList.isThisMonthJob
	from (
	select
		clmst.CLDIVCD as cldivID,
		clmst.ACCOUNT_CD as cldivAccountID,
		clmst.DIVNM as dClientName,
		jobtrn.JOB_CD as jobNo,
		jobtrn.JOB_NAME as jobName,
		sellordertrn.SALEUPDDATE as sellupdate,
		salemst.SALE_NAME as saleTypName,
		case when invoicetrn.INVOICD_NO is not null then 1 else 0 end  as isInvoicePublish,
		case when reqtrn.REQ_CD is not null then 1 else 0 end as isReqPublish,
		case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then sellordertrn.SALE_AMT else 0 end as saleAmt,
		case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then sellordertrn.SALE_VAT_AMT else 0 end as saleVat,
		case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then 1 else 0 end as isThisMonthJob
	from jobtrn
		left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
		left join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and sellordertrn.COMPANY_CD=jobtrn.COMPANY_CD  and sellordertrn.DEL_FLG != 1
		left join salemst on jobtrn.SALE_TYP=salemst.SALE_CD and salemst.COMPANY_CD=jobtrn.COMPANY_CD
		left join invoicetrn on jobtrn.JOB_CD=invoicetrn.JOB_CD and invoicetrn.COMPANY_CD=jobtrn.COMPANY_CD
		left join reqtrn on jobtrn.JOB_CD=reqtrn.JOB_CD and reqtrn.COMPANY_CD=jobtrn.COMPANY_CD
	where 
		date_format(sellordertrn.DLVDAY,"%Y%m") &lt;= date_format(#{choseDate},"%Y%m")
		and jobtrn.DEL_FLG != 1
		and jobtrn.COMPANY_CD=#{companyID}
	union all
	select
		clmst.CLDIVCD as cldivID,
		clmst.ACCOUNT_CD as cldivAccountID,
		clmst.DIVNM as dClientName,
		"J999999998" as jobNo,
		jobtrn.JOB_NAME as jobName,
		sellordertrn.SALEUPDDATE as sellupdate,
		salemst.SALE_NAME as saleTypName,
		case when invoicetrn.INVOICD_NO is not null then 1 else 0 end  as isInvoicePublish,
		case when reqtrn.REQ_CD is not null then 1 else 0 end as isReqPublish,
		sum(case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then sellordertrn.SALE_AMT else 0 end) as saleAmt,
		sum(case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then sellordertrn.SALE_VAT_AMT else 0 end) as saleVat,
		case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then 1 else 0 end as isThisMonthJob
	from jobtrn
		left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
		left join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and sellordertrn.COMPANY_CD=jobtrn.COMPANY_CD  and sellordertrn.DEL_FLG != 1
		left join salemst on jobtrn.SALE_TYP=salemst.SALE_CD and salemst.COMPANY_CD=jobtrn.COMPANY_CD
		left join invoicetrn on jobtrn.JOB_CD=invoicetrn.JOB_CD and invoicetrn.COMPANY_CD=jobtrn.COMPANY_CD
		left join reqtrn on jobtrn.JOB_CD=reqtrn.JOB_CD and reqtrn.COMPANY_CD=jobtrn.COMPANY_CD
	where 
		date_format(sellordertrn.DLVDAY,"%Y%m") &lt;= date_format(#{choseDate},"%Y%m")
		and jobtrn.DEL_FLG != 1
		and jobtrn.COMPANY_CD=#{companyID}	
	group by jobtrn.CLDIV_CD	
	union all
	select
		"9999999999" as cldivID,
		clmst.ACCOUNT_CD as cldivAccountID,
		clmst.DIVNM as dClientName,
		"J999999999" as jobNo,
		jobtrn.JOB_NAME as jobName,
		sellordertrn.SALEUPDDATE as sellupdate,
		salemst.SALE_NAME as saleTypName,
		case when invoicetrn.INVOICD_NO is not null then 1 else 0 end  as isInvoicePublish,
		case when reqtrn.REQ_CD is not null then 1 else 0 end as isReqPublish,
		sum(case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then sellordertrn.SALE_AMT else 0 end) as saleAmt,
		sum(case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then sellordertrn.SALE_VAT_AMT else 0 end) as saleVat,
		case when date_format(sellordertrn.DLVDAY,"%Y%m") = date_format(#{choseDate},"%Y%m") then 1 else 0 end as isThisMonthJob
	from jobtrn
		left join clmst on jobtrn.CLDIV_CD=clmst.CLDIVCD and jobtrn.COMPANY_CD=clmst.COMPANY_CD
		left join sellordertrn on jobtrn.JOB_CD = sellordertrn.JOB_CD and sellordertrn.COMPANY_CD=jobtrn.COMPANY_CD  and sellordertrn.DEL_FLG != 1
		left join salemst on jobtrn.SALE_TYP=salemst.SALE_CD and salemst.COMPANY_CD=jobtrn.COMPANY_CD
		left join invoicetrn on jobtrn.JOB_CD=invoicetrn.JOB_CD and invoicetrn.COMPANY_CD=jobtrn.COMPANY_CD
		left join reqtrn on jobtrn.JOB_CD=reqtrn.JOB_CD and reqtrn.COMPANY_CD=jobtrn.COMPANY_CD
	where 
		date_format(sellordertrn.DLVDAY,"%Y%m") &lt;= date_format(#{choseDate},"%Y%m")
		and jobtrn.DEL_FLG != 1
		and jobtrn.COMPANY_CD=#{companyID}
	) as jobList	
	order by jobList.cldivID,jobList.jobNo
	
	</select>
	<select id="getConfirmAmtAndConfirmVatByJoB" resultMap="eReportResultMap">
		select 
			orderList.jobNo,
			sum(orderList.orderAmt) as confirmCostTotalAmt,
			sum(orderList.orderVat) as costVatTotal
		from (
			select
				jobtrn.JOB_CD as jobNo,
				paytrn.PAY_AMT as orderAmt,
				paytrn.PAY_VAT_AMT as orderVat
			from jobtrn 
				left join costtrn on jobtrn.JOB_CD=costtrn.JOB_CD and costtrn.COMPANY_CD=jobtrn.COMPANY_CD and costtrn.DEL_FLG != 1
				join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and paytrn.COMPANY_CD=costtrn.COMPANY_CD and paytrn.DEL_FLG != 1
			where 
				jobtrn.JOB_CD=#{jobNo}
				and jobtrn.DEL_FLG != 1
				and paytrn.CONFIRMDATE BETWEEN #{startDate} AND  #{endDate}
				and jobtrn.COMPANY_CD=#{companyID}
			union all
			select
				jobtrn.JOB_CD as jobNo,
				lendtrn.LEND_AMT as orderAmt,
				lendtrn.LEND_VAT_AMT as orderVat
			from jobtrn 
				left join lendtrn on jobtrn.JOB_CD=lendtrn.JOB_CD and lendtrn.COMPANY_CD=jobtrn.COMPANY_CD and lendtrn.DEL_FLG != 1
			where 
				jobtrn.JOB_CD=#{jobNo}
				and jobtrn.DEL_FLG !=1 
				and lendtrn.CONFIRMDATE BETWEEN #{startDate} AND  #{endDate}
				and jobtrn.COMPANY_CD=#{companyID}
		) as orderList
	</select>
	
	<select id="getNotConfirmAmtByJoB" resultMap="eReportResultMap">
		select 
			sum(orderList.orderAmt) as notConfirmCostTotalAmt 
		from(
			select
				sum(orderhistorytrn.COST_AMT) as orderAmt
			from jobtrn 
				left join costtrn on jobtrn.JOB_CD=costtrn.JOB_CD and costtrn.COMPANY_CD=jobtrn.COMPANY_CD and costtrn.DEL_FLG != 1
				left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and paytrn.COMPANY_CD=costtrn.COMPANY_CD and paytrn.DEL_FLG != 1
				left join orderhistorytrn on costtrn.COST_NO = orderhistorytrn.ORDER_NO and costtrn.COMPANY_CD=orderhistorytrn.COMPANY_CD
			where 
				jobtrn.JOB_CD=#{jobNo}
				and jobtrn.DEL_FLG != 1
				and ((paytrn.`ADDDATE` BETWEEN #{startDate} AND  #{endDate}  and paytrn.CONFIRMDATE is null)  
					or (paytrn.`ADDDATE` is null  and costtrn.`ADDDATE` BETWEEN #{startDate} AND  #{endDate} ) 
					or (paytrn.`ADDDATE` BETWEEN #{startDate} AND  #{endDate} and paytrn.CONFIRMDATE >  #{endDate} ))
				and jobtrn.COMPANY_CD=#{companyID}
				and orderhistorytrn.CHECK_MONTH=date_format(#{outMonth},"%Y%m")
			union all

			select
				sum(orderhistorytrn.COST_AMT) as orderAmt
			from jobtrn 
				left join lendtrn on jobtrn.JOB_CD=lendtrn.JOB_CD and lendtrn.COMPANY_CD=jobtrn.COMPANY_CD and lendtrn.DEL_FLG != 1
				left join orderhistorytrn on lendtrn.INPUT_NO = orderhistorytrn.ORDER_NO and lendtrn.COMPANY_CD=orderhistorytrn.COMPANY_CD
			where 
				jobtrn.JOB_CD=#{jobNo}
				and jobtrn.DEL_FLG != 1
				and ((lendtrn.`ADDDATE` BETWEEN #{startDate} AND  #{endDate} and lendtrn.CONFIRMDATE is null) 
					or (lendtrn.`ADDDATE` BETWEEN #{startDate} AND  #{endDate} and lendtrn.CONFIRMDATE > #{endDate})) 
				and jobtrn.COMPANY_CD=#{companyID}
				and orderhistorytrn.CHECK_MONTH=date_format(#{outMonth},"%Y%m")
			union all
			
			select
				sum(nowOrder.COST_AMT) - sum(beforOrder.COST_AMT) as orderAmt
			from jobtrn 
				left join costtrn on jobtrn.JOB_CD=costtrn.JOB_CD and costtrn.COMPANY_CD=jobtrn.COMPANY_CD and costtrn.DEL_FLG != 1
				left join paytrn on costtrn.INPUT_NO=paytrn.INPUT_NO and paytrn.COMPANY_CD=costtrn.COMPANY_CD and paytrn.DEL_FLG != 1
				left join orderhistorytrn as beforOrder on costtrn.COST_NO=beforOrder.ORDER_NO and beforOrder.COMPANY_CD=costtrn.COMPANY_CD and beforOrder.ORDER_TYPE=0  and beforOrder.CHECK_MONTH=#{beforDate}  
				left join orderhistorytrn as nowOrder on costtrn.COST_NO=nowOrder.ORDER_NO and nowOrder.COMPANY_CD=costtrn.COMPANY_CD and nowOrder.ORDER_TYPE=0  and nowOrder.CHECK_MONTH= date_format(#{outMonth},"%Y%m")
			where 
				jobtrn.JOB_CD=#{jobNo}
				and jobtrn.DEL_FLG != 1
				and (( paytrn.`ADDDATE` is null and costtrn.`ADDDATE` &lt; #{startDate})
					or (paytrn.`ADDDATE` &lt; #{startDate} and paytrn.CONFIRMDATE > #{endDate})
					or (paytrn.`ADDDATE` &lt; #{startDate} and paytrn.CONFIRMDATE is null))
				and jobtrn.COMPANY_CD=#{companyID}
			
			
			union all
			
			select
				sum(nowOrder.COST_AMT) - sum(beforOrder.COST_AMT) as orderAmt
			from jobtrn 
				join lendtrn on jobtrn.JOB_CD=lendtrn.JOB_CD and lendtrn.COMPANY_CD=jobtrn.COMPANY_CD and lendtrn.DEL_FLG != 1
				left join orderhistorytrn as beforOrder on lendtrn.INPUT_NO=beforOrder.ORDER_NO and beforOrder.COMPANY_CD=lendtrn.COMPANY_CD and beforOrder.ORDER_TYPE=0  and beforOrder.CHECK_MONTH=#{beforDate} 
				left join orderhistorytrn as nowOrder on lendtrn.INPUT_NO=nowOrder.ORDER_NO and nowOrder.COMPANY_CD=lendtrn.COMPANY_CD and nowOrder.ORDER_TYPE=0  and nowOrder.CHECK_MONTH=date_format(#{outMonth},"%Y%m")
			where 
				jobtrn.JOB_CD=#{jobNo}
				and jobtrn.DEL_FLG != 1
				and ((lendtrn.`ADDDATE` &lt; #{startDate}  and lendtrn.CONFIRMDATE is null)
					or (lendtrn.`ADDDATE` &lt; #{startDate}  and lendtrn.CONFIRMDATE > #{endDate}))
				and jobtrn.COMPANY_CD=#{companyID}
		) as orderList
	
	</select>
</mapper>